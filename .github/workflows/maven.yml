# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 11, 17 ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven
    - name: Cache
      uses: actions/cache@v4.2.1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-      
    - name: Build with Maven
      run: ./mvnw -B integration-test -P run-its --file pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# TO delete old versions
# https://github.com/actions/delete-package-versions
    - name: Upload to Codecov
      uses: codecov/codecov-action@v5
    #- name: Upload to code climate
    #  uses: paambaati/codeclimate-action@v2.7.5
    #  env:
    #    CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
    #    JACOCO_SOURCE_PATH: "${{github.workspace}}/src/main/java"
    #  with:
    #    coverageCommand: ./mvnw -B package integration-test -P run-its --file pom.xml
    #    coverageLocations: ${{github.workspace}}/target/site/jacoco/jacoco.xml:jacoco

  publish-snapshot:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'
          cache: maven
      # - run: ./mvnw -B --no-transfer-progress -DskipTests deploy --projects :heapwatch-maven-plugin-shade
      - run: ./mvnw -B --no-transfer-progress -DskipTests deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - run: mkdir staging && cp */target/*.jar staging
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Package
#          path: staging

